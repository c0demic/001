buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
    }
}

plugins {
    id "com.moowork.node" version "1.1.1"
    id "com.moowork.grunt" version "1.1.1"
}

apply plugin: 'com.moowork.node'


apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'com.moowork.node'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

yarn_cache_clean {
    args = ['--no-emoji', '--json']
}

yarn_install.dependsOn(yarn_cache_clean)


task installExpress(type: NpmTask) {
    //install the express package only
    args = ['install', 'react', 'jsx', 'redux', 'react-dom', 'babel', 'babel-loader', 'babel-core', 'webpack', '--save']
}

task uninstallExpress(type: NpmTask) {
    args = ['uninstall', 'react', 'jsx', 'react-dom', 'redux', 'babel', 'babel-loader', 'babel-core', 'webpack', '-S']
}

task addExpress(type: YarnTask) {
    //install the express package only
    args = ['add','babel-plugin-transform-es2015-classes','babel-plugin-transform-decorators-legacy','radium','prop-types','babel-plugin-syntax-decorators', 'path','material-ui','paper','file-loader', 'react', 'jsx', 'react-dom', 'redux','babel-cli', 'babel-loader', 'babel-core', 'babel-preset-es2015','babel-preset-es2017', 'babel-preset-react','babel-preset-stage-0','babel-preset-stage-1','babel-preset-stage-2', 'webpack','--dev']
}
task removeExpress(type: YarnTask) {
    //install the express package only
    args = ['remove','babel-plugin-transform-es2015-classes','babel-plugin-transform-decorators-legacy','radium','prop-types','babel-plugin-syntax-decorators', 'path','material-ui','paper','file-loader', 'react', 'jsx', 'react-dom', 'redux', 'babel-cli', 'babel-loader', 'babel-core', 'babel-preset-es2015','babel-preset-es2017', 'babel-preset-react','babel-preset-stage-0','babel-preset-stage-1','babel-preset-stage-2', 'webpack','-D']
}
/*
task addExpress(type: YarnTask) {
    //install the express package only
    args = ['add', 'path','mozjpeg','pngquant','url-loader','img-loader','material-ui','paper','image-webpack-loader','imagemin/imagemin-pngquant','file-loader', 'react', 'jsx', 'react-dom','react-native', 'redux', 'babel','babel-cli', 'babel-loader', 'babel-core', 'babel-preset-es2015', 'babel-preset-react', 'webpack', '--dev']
}
task removeExpress(type: YarnTask) {
    //install the express package only
    args = ['remove', 'path','mozjpeg','pngquant','url-loader','img-loader','material-ui','paper','image-webpack-loader','imagemin/imagemin-pngquant','file-loader', 'react', 'jsx', 'react-dom','react-native', 'redux', 'babel','babel-cli', 'babel-loader', 'babel-core', 'babel-preset-es2015', 'babel-preset-react', 'webpack']
}
*/



/*
task jsjsx(type: NodeTask){
    script:file('')
}
*/
task bundle(type: YarnTask) {
//    inputs.files(fileTree('node_modules'))
//    inputs.files(fileTree('src/main/webapp/js'))
    inputs.file('package.json')
    inputs.file('webpack.config.js')

//    outputs.dir('build/resources/static')
    outputs.dir('src/main/webapp/jswebpack')
    dependsOn yarn_install
    args = ['run', 'build']
}

bundle.mustRunAfter addExpress
war.mustRunAfter bundle